---
// Define component props and scripts here
import { useState } from 'react';
// PropTypes import is commented out as Astro components use TypeScript for prop types.
// import PropTypes from 'prop-types';
import React from 'react';

interface LanguageProps {
  language: string;
  active: string;
}

const Language = ({ language, active }: LanguageProps) => {
  return language === active ? (
    <span class="language-switcher__active-language">{language}</span>
  ) : (
    <a target="_self" class="language-switcher__language" href={active === 'en' ? '/' : '/en'}>{language}</a>
  );
};

interface LanguageSwitcherProps {
  lang: string;
}

const LanguageSwitcher = ({ lang }: LanguageSwitcherProps) => {
  return (
    <div class="language-switcher">
      <Language language="fi" active={lang} />

      <Language language="en" active={lang} />
    </div>
  );
};

// Default props and PropTypes are not used in Astro in the same way as in React.
// Default props can be handled in the component function directly.
// PropTypes validation can be replaced by TypeScript interfaces.

export default LanguageSwitcher;
---

<style global>
@import "../../styles/LanguageSwitcher.scss";
</style>

<div>
  <LanguageSwitcher lang="fi" />
</div>
