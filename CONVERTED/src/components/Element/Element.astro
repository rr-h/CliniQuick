---
// Import the necessary styles globally. In Astro, global styles can be imported directly in the frontmatter script.
import "../../styles/Element.scss";

// Define props for the Astro component. Astro supports TypeScript for props definition directly.
type ElementProps = {
  Tag?: string;
  className?: string;
  flex?: boolean;
  dirColumn?: boolean;
  spaceAround?: boolean;
  spaceBetween?: boolean;
  centered?: boolean;
  autoMargin?: boolean;
  autoBottomMargin?: boolean;
  horizontalHalf?: boolean;
  flexStart?: boolean;
  noWrap?: boolean;
  centeredInDesktop?: boolean;
  relative?: boolean;
  children?: any;
};

const defaultProps = {
  Tag: 'div',
  className: '',
};

// Define your Astro component using the frontmatter script.
const Element = (props: ElementProps & typeof defaultProps) => {
  const {
    Tag = 'div',
    children,
    className,
    flex,
    dirColumn,
    spaceAround,
    spaceBetween,
    centered,
    autoMargin,
    autoBottomMargin,
    horizontalHalf,
    flexStart,
    noWrap,
    centeredInDesktop,
    relative,
  } = { ...defaultProps, ...props };

  const classes = [];

  flex && classes.push('element--flex');
  autoMargin && classes.push('element--auto-margin');
  autoBottomMargin && classes.push('element--auto-bottom-margin');
  dirColumn && classes.push('element--column');
  spaceAround && classes.push('element--space-around');
  spaceBetween && classes.push('element--space-between');
  centered && classes.push('element--centered');
  horizontalHalf && classes.push('element--horizontal-half');
  flexStart && classes.push('element--flex-start');
  noWrap && classes.push('element--no-wrap');
  centeredInDesktop && classes.push('element--centered-in-desktop');
  relative && classes.push('element--relative');

  return (
    <Tag class={`${className} ${classes.join(' ')}`} {...props}>
      {children}
    </Tag>
  );
};

export default Element;
---

// Here, we use the component with JSX-like syntax in the template part of the Astro file.
<Element Tag="section" className="custom-element" flex centered>
  {/* Your content here */}
</Element>
