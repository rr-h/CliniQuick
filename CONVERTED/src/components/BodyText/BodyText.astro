---
// Astro component script
// Import statements for modules. Uncomment if needed.
// import Parser from 'html-react-parser';
// import PropTypes from 'prop-types';

// Define the component's props
interface BodyTextProps {
  text?: string | string[];
  className?: string;
  heading?: { title: string; level: string };
  headingFontSize?: string;
  bold?: boolean;
  centered?: boolean;
  noPadding?: boolean;
  headingFont?: boolean;
}

const defaultProps: BodyTextProps = {
  heading: { title: "", level: "h2" },
  text: "",
  className: "",
  centered: false,
  bold: false,
  noPadding: false,
};

// Component logic
const getClasses = ({
  centered,
  bold,
  noPadding,
  headingFont,
}: BodyTextProps) => {
  const classes = [];
  if (centered) classes.push("centered");
  if (bold) classes.push("bold");
  if (noPadding) classes.push("body-text--no-padding");
  if (headingFont) classes.push("heading-font");
  return classes.join(" ");
};

const getHeading = ({ heading, headingFontSize }: BodyTextProps) => {
  if (heading && heading.title) {
    const Heading = heading.level;
    return (
      <Heading class="body-text__title" style={{ fontSize: headingFontSize }}>
        {heading.title}
      </Heading>
    );
  }
  return null;
};

// Astro components use the `.astro` extension and can embed other components or raw HTML.
---

<style is:global>
  @import "../../styles/BodyText.scss";
</style>

<div class={`body-text ${Astro.props.className ?? ""}`} {...Astro.props}>
  {Astro.props.heading?.title && getHeading(Astro.props)}
  {
    Astro.props.text && typeof Astro.props.text === "string" ? (
      <p class={`body-text__content ${getClasses(Astro.props)}`}>
        {Astro.props.text}
      </p>
    ) : (
      Astro.props.text &&
      Astro.props.text.map((p: string) => (
        <div key={p} class={`body-text__content ${getClasses(Astro.props)}`}>
          {/* Parser(p) */}
          {p} {/* Use Parser here if needed and uncomment import */}
        </div>
      ))
    )
  }
</div>
