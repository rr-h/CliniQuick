---
// Astro component setup
import { useState } from 'react';
import LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher.astro';
import NavigationItem from './Item.astro';

// Navigation data
const navigation = {
  en: [
    // ...
  ],
  fi: [
    // ...
  ],
};

// Functions for handling navigation state changes
const handleCloseMenu = `
  document.body.classList.remove('is-open--navigation');
`;
const handleHamburgerClick = `
  document.body.classList.toggle('is-open--navigation');
`;

// Pass props to the component using Astro.props
const { className, lang } = Astro.props;

// Using useState for client-side interactivity in Astro
const [navigationOpen, setNavigationOpen] = useState(false);
---

<style is:global>
  @import "../../styles/Navigation.scss";
</style>

<div class={`navigation__wrapper ${className}`}>
  <button
    aria-label="Navigation menu"
    aria-expanded={navigationOpen}
    onClick={() => setNavigationOpen(!navigationOpen)}
    class="navigation__toggle"
  >
    <div class="navigation__toggle-icon" />
  </button>
  <nav>
    <ul class="navigation">
      {/* Map through navigation items based on the lang prop */}
      {navigation[lang].map((i) => (
        <NavigationItem key={i.path} {...i} onClick={Astro.client.hydrate(handleCloseMenu)} />
      ))}

      <LanguageSwitcher lang={lang} />
    </ul>
  </nav>
</div>

<script>
  // Including client-side JavaScript for handling navigation state
  Astro.client.hydrate(() => {
    const handleCloseMenu = ${handleCloseMenu};
    const handleHamburgerClick = ${handleHamburgerClick};

    // Add any other client-side interactions here
  });
</script>
