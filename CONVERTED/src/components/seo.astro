---
// Astro component frontmatter script
import React from 'react';
import PropTypes from 'prop-types';
// Importing images directly, assuming static import works similarly in your Astro setup
import defaultImage from '../../../public/images/seo_image.jpg';
import englishVersionSeoImage from '../../../public/images/EYE_green_wide.jpg';

// Assuming siteMetadata is fetched or imported statically as an example
const siteMetadata = {
  title: 'Example Site Title',
  description: 'This is an example description for the site.',
  author: '@exampleAuthor',
};

// Function to simulate fetching or statically handling the equivalent of Gatsby's StaticQuery
function useSiteMetadata() {
  return siteMetadata;
}

// SEO component logic converted for Astro usage
function SEO({ description, lang, meta, image, keywords, title }) {
  const seoImage = image || (lang === 'en' ? defaultImage : englishVersionSeoImage);
  const data = useSiteMetadata(); // Simulating data fetching

  const metaDescription = description || data.description;
  const fullMeta = [
    {
      name: 'description',
      content: metaDescription,
    },
    // Other meta tags follow...
  ]
  // Concatenate additional meta tags as needed

  // Return an array of meta tags for rendering in the <head> element
  return fullMeta;
}

SEO.defaultProps = {
  lang: 'fi',
  image: null,
  meta: [],
  keywords: [],
};

// Direct PropTypes usage like this is not typical in Astro, showing for completeness
SEO.propTypes = {
  description: PropTypes.string,
  lang: PropTypes.string,
  meta: PropTypes.array,
  image: PropTypes.string,
  keywords: PropTypes.array,
  title: PropTypes.string.isRequired,
};
---

<html lang={Astro.props.lang}>
  <head>
    <title>{Astro.props.title}</title>
    {SEO(Astro.props).map(tag => (
      <meta name={tag.name} content={tag.content} />
    ))}
    {/* Place other head elements here */}
  </head>
  <body>
    {/* Page content */}
  </body>
</html>
